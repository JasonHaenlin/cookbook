<?php

namespace OCA\Cookbook\Service;

use OCP\Image;

/**
 * This class carries out the creation of the thumbnail images for the recipes.
 *
 * It uses only the in memory representations to avoid file IO if not needed.
 * You need to store the images if they should be prreserved.
 */
class ThumbnailService {
	
	/**
	 * Generate a new image from the NC core.
	 *
	 * This is needed to tap into the class during testing.
	 *
	 * @return Image An empty image as generated by `new Image()`
	 */
	protected function getNewImage(): Image {
		return new Image();
	}

	/**
	 * Create a thumbnail from the full-sized image
	 *
	 * @param string $data The full-sized image data
	 * @return string The data of the thumbnail
	 */
	public function getThumbnailMainSize(string $data): string {
		return $this->createThumbnail($data, 256);
	}

	/**
	 * Create a small thumbnail.
	 *
	 * @param string $data The image data to use as a basis.
	 * This can either be the full-sized image or the thumbnail.
	 * @return string The data of the small thumbnail.
	 */
	public function getThumbnailMiniSize(string $data): string {
		return $this->createThumbnail($data, 16);
	}

	/**
	 * Create a new thumbnail of a given size
	 *
	 * @param string $data The image data
	 * @param integer $size The maximal width or height of the destination image
	 * @return string The resized and minimized image
	 */
	protected function createThumbnail(string $data, int $size): string {
		$img = $this->getNewImage();

		// Store to temp location
		$tmpFile = tmpfile();
		fwrite($tmpFile, $data);
		fflush($tmpFile);

		// Get the file name
		$filename = stream_get_meta_data($tmpFile)['uri'];

		$img->loadFromFile($filename);

		$img->fixOrientation();
		$img->resize($size);
		$img->centerCrop();

		return $img->data();
	}
}
